apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-igw-external
  namespace: istio-system
spec:
  hub: gcr.io/istio-release
  #tag: "${istio_version}-distroless"
  profile: empty
  components:
    ingressGateways:
      - name: istio-igw-external
        namespace: istio-ingress
        enabled: true
        label:
          app: istio-igw-external
          env: production
        k8s:
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            apm.datadoghq.com/env: '{ "DD_ENV": "${envrnmnt}", "DD_TRACE_ANALYTICS_ENABLED": "true" }'       
          hpaSpec:
            maxReplicas: 10
            minReplicas: 3
          resources:
            requests:
              cpu: "2"
              memory: 512Mi
            limits:
              cpu: "4"
              memory: 1Gi
          podDisruptionBudget:
            minAvailable: 2        
          env:
            - name: "DD_ENV"
              value: "prod"
            - name: "DD_TRACE_ANALYTICS_ENABLED"
              value: "true"
          readinessProbe:
            initialDelaySeconds: 10
            successThreshold: 3
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: gateway
                      operator: In
                      values:
                      - istio-igw-external
                  topologyKey: failure-domain.beta.kubernetes.io/zone
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: gateway
                    operator: In
                    values:
                    - istio-igw-external
                topologyKey: kubernetes.io/hostname
          #serviceAnnotations:
            #cloud.google.com/load-balancer-type: "internal"
            #networking.gke.io/internal-load-balancer-allow-global-access: "true"
          service:
            ports:
            - port: 443
              name: https
              targetPort: 8443
            - port: 80
              name: http2
              targetPort: 8080
  values:
    global:
      defaultNodeSelector:
        istio-nodepool: true
      defaultTolerations:
      - effect: NoSchedule
        key: istio
        operator: Equal
        value: "true"
      # logAsJson: true
      # priorityClassName: common-critical
      # logging:
      #  level: all:warn
      # proxy:
      #   tracer: datadog
    gateways:
      istio-ingressgateway:
        name: istio-igw-external
        autoscaleEnabled: true
        type: LoadBalancer
        #loadBalancerIP: "${igw-internal-ip}"
        #externalTrafficPolicy: Local
      #   loadBalancerSourceRanges:
      # %{ for range in loadbalancer_sourceranges }
      #     - ${range}
      # %{ endfor }