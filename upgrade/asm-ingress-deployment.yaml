apiVersion: apps/v1
kind: Deployment
metadata:
  name: asm-ingressgateway
  namespace: asm-ingress
spec:  
  selector:
    matchLabels:
      asm: ingressgateway
  template:
    metadata:
      annotations:
        # Select the gateway injection template (rather than the default sidecar template)
        inject.istio.io/templates: gateway
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

      labels:
        # Set a unique label for the gateway. This is required to ensure Gateways can select this workload
        asm: ingressgateway
        # Enable gateway injection. If connecting to a revisioned control plane, replace with "istio.io/rev: revision-name"
        sidecar.istio.io/inject: "true"    
        istio.io/rev: asm
        service.istio.io/canonical-revision: asm # Had to add this label to not break the app access during migration to mesh ca
    spec:
      nodeSelector: 
          istio-nodepool: "true"
      affinity: 
        podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: asm
                      operator: In
                      values:
                      - ingressgateway
                  topologyKey: failure-domain.beta.kubernetes.io/zone
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: istio
                    operator: In
                    values:
                    - pilot
                topologyKey: kubernetes.io/hostname
      containers:
      - name: istio-proxy
        image: auto # The image will automatically update each time the pod starts.
        resources:
          requests:
            cpu: "2"
            memory: 512Mi
          limits:
            cpu: "4"
            memory: 1Gi 
      tolerations:
      - effect: NoSchedule
        key: istio
        operator: Equal
        value: "true"
        # readinessProbe:
        #     initialDelaySeconds: 10
        #     successThreshold: 3
        #     tcpSocket:
        #       port: 15021
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: asm-ingressgateway-sds
  namespace: asm-ingress
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: asm-ingressgateway-sds
  namespace: asm-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: asm-ingressgateway-sds
subjects:
- kind: ServiceAccount
  name: default